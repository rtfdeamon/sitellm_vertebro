(function (global) {
  const fallbackFormat = (value, params = {}) => {
    if (value === null || value === undefined) return '';
    const base = typeof value === 'string' ? value : String(value);
    return base.replace(/\{(\w+)\}/g, (_, token) => {
      if (Object.prototype.hasOwnProperty.call(params, token)) {
        const replacement = params[token];
        return replacement === null || replacement === undefined ? '' : String(replacement);
      }
      return '';
    });
  };
  if (typeof global.t !== 'function') {
    global.t = (key, params = {}) => fallbackFormat(key, params);
  }

  if (typeof global.tl !== 'function') {
    global.tl = (phrase, params = {}) => fallbackFormat(phrase, params);
  }

  function initAdminI18n({
    languageSelect = global.document.getElementById('adminLanguage'),
    authHint = global.document.getElementById('adminAuthHint'),
    authMessage = global.document.getElementById('adminAuthMessage'),
    authError = global.document.getElementById('adminAuthError'),
    onLanguageApplied = () => {},
  } = {}) {
    const LANGUAGE_STORAGE_KEY = 'admin_language';
    const FALLBACK_LANGUAGE = 'en';
    const BASE_STRINGS = {
      pillOperations: 'Operations',
      pageTitle: 'Crawler Admin',
      headerTitle: 'Crawler Control Panel',
      headerSubtitle: 'Manage crawling, knowledge base, and infrastructure in one dashboard',
      buttonReorder: 'Reorder blocks',
      buttonReorderDone: 'Done',
      buttonLogout: 'Log out',
      languageLabel: 'Language',
      overviewProjectTitle: 'Project',
      overviewProjectMeta: 'No project selected',
      overviewCrawlerTitle: 'Crawler',
      overviewResourcesTitle: 'Resources',
      overviewLLMTitle: 'LLM insights',
      overviewLLMEmpty: 'Recent prompts will appear here',
      overviewBuildTitle: 'Build',
      cardProjectsTitle: 'Projects',
      buttonAddProject: 'Add project',
      buttonRefreshProjects: 'Refresh list',
      crawlerStatusTitle: 'Crawler status',
      crawlerQueued: 'Queued: {value}',
      crawlerInProgress: 'In progress: {value}',
      crawlerDone: 'Done: {value}',
      crawlerFailed: 'Failed: {value}',
      crawlerLast: 'Last: {value}',
      crawlerProjectLabel: 'Project: {value}',
      crawlerLastUrls: 'Recent URLs',
      servicesTitle: 'Services',
      serviceMongo: 'Mongo: {value}',
      serviceRedis: 'Redis: {value}',
      serviceQdrant: 'Qdrant: {value}',
      serviceOverall: 'Status: {value}',
      resourcesTitle: 'Resources',
      resourceCpuApp: 'CPU (app): {value}',
      resourceCpuSys: 'CPU (sys): {value}',
      resourceRam: 'RAM: {value}',
      resourceRss: 'RSS: {value}',
      resourceGpu: 'GPU: {value}',
      resourcePython: 'Python: {value}',
      manageSection: 'Management',
      crawlerLaunchTitle: 'Crawler launch',
      crawlerLogsTooltip: 'Show logs',
      crawlerLogsHeader: 'Crawler logs',
      crawlerLogsCopy: 'Copy',
      crawlerLogsRefresh: 'Refresh',
      crawlerLogsHide: 'Hide',
      crawlerLogsEmpty: 'Logs will be fetched on demand.',
      crawlerSelectProject: 'Select a project',
      crawlerLaunched: 'Started',
      crawlerLaunchFailed: 'Failed to start',
      crawlerStartError: 'Crawler start error',
      crawlerStopping: 'Stopping…',
      crawlerStopFailed: 'Failed to stop',
      crawlerStopError: 'Crawler stop error',
      crawlerActionReset: 'Counters reset',
      crawlerActionDedup: 'Duplicates removed',
      crawlerActionNoData: 'Nothing to copy',
      crawlerActionProcessing: 'Working…',
      crawlerActionExecuteError: 'Failed to execute action',
      crawlerStartButton: 'Start',
      crawlerStopButton: 'Stop',
      crawlerResetButton: 'Reset counters',
      crawlerDedupButton: 'Remove duplicate URLs',
      crawlerNoteIndexing: 'Indexing in progress or errors detected; check counters.',
      crawlerNoteLlmPaused: 'LLM unavailable — queue processing paused.',
      crawlerStartUrl: 'Start URL',
      crawlerDepth: 'Depth',
      crawlerPages: 'Pages',
      crawlerCollectBooks: 'Store full pages for book reading',
      crawlerCollectMedex: 'Collect Medesk booking links',
      voiceTrainingTitle: 'Voice training',
      voiceTrainingSummary: 'Upload 3+ clean voice clips to teach the assistant to speak like your project.',
      voiceUploadButton: 'Upload clips',
      voiceRecordButton: 'Record clip',
      voiceRecordStopButton: 'Stop recording',
      voiceSamplesEmpty: 'No audio clips uploaded yet.',
      voiceTrainButton: 'Train custom voice',
      projectDomainHint: 'Paste full URL, for example https://example.com',
      projectDomainPlaceholder: 'https://example.com',
      promptAiStart: 'Generating…',
      promptAiReady: 'Prompt ready',
      promptAiStopped: 'Stopped',
      promptAiError: 'Error: {message}',
      promptAiInvalidDomain: 'Specify a valid domain or URL',
      promptAiEmpty: 'Model returned empty result',
      genericFailed: 'failed',
      ollamaServerDefaultTitle: 'Default',
      ollamaServerUnnamed: 'Unnamed',
      ollamaServerHealthy: 'healthy',
      ollamaServerError: 'error',
      ollamaServerDisabled: 'disabled',
      ollamaServerStatusTitle: 'Status',
      ollamaServerToggleOn: 'Enabled',
      ollamaServerToggleOff: 'Disabled',
      ollamaServerDeleting: 'Deleting server…',
      ollamaServerDeleted: 'Server deleted.',
      ollamaServerSaving: 'Saving server…',
      ollamaServerSaved: 'Server saved.',
      ollamaServerUpdatingState: 'Enabling server…',
      ollamaServerDisabling: 'Disabling server…',
      ollamaServersSummary: 'Total: {total}. Enabled: {enabled}. Available: {active}.',
      ollamaServersEmpty: 'No Ollama servers registered.',
      ollamaServersNone: 'No servers configured.',
      ollamaServerFormInvalid: 'Specify server name and address.',
      ollamaServerInstallStarted: 'Model {model} installation started.',
      ollamaServerHealthyUnknown: 'unknown',
      ollamaLatencyLabel: 'Latency',
      ollamaLatencyValue: '{value} ms',
      ollamaRequestsPerHour: 'Requests/hour',
      ollamaInFlight: 'In flight',
      ollamaButtonDelete: 'Delete',
      ollamaActionGeneralError: 'Error: {error}',
      ollamaActionInstallError: 'Install error: {error}',
      ollamaActionSaveError: 'Save error: {error}',
      ollamaActionDeleteError: 'Delete error: {error}',
      ollamaActionUpdateError: 'Update error: {error}',
      ollamaCatalogSummary: 'Local Ollama CLI available. Models installed: {count}.',
      ollamaCatalogRemoteSummary: 'Remote Ollama server available. Models installed: {count}.',
      ollamaCatalogHybridSummary: 'Local CLI and remote servers available. Models installed: {count}.',
      ollamaCatalogUnavailable: 'Catalog unavailable: ollama command not found, but models detected.',
      ollamaCommandMissing: 'Ollama command not found on the server.',
      ollamaCatalogRefreshing: 'Refreshing catalog…',
      ollamaCatalogLoadError: 'Failed to load catalog: {error}',
      ollamaInstalledEmpty: 'No models installed.',
      ollamaPopularEmpty: 'No recommended models.',
      ollamaJobsEmpty: 'No active installations.',
      ollamaInstallButton: 'Install',
      ollamaInstalling: 'Installing…',
      ollamaJobPending: 'Pending',
      ollamaJobRunning: 'Installing…',
      ollamaJobSuccess: 'Installed',
      ollamaJobError: 'Installation failed',
      ollamaJobErrorUnavailable: '{model} unavailable on the server',
      ollamaJobErrorMessage: '{message}',
      ollamaRefreshUpdating: 'Refreshing list…',
      ollamaRefreshError: 'Refresh error: {error}',
      projectsModelPlaceholder: '—',
      logoutProgress: 'Signing out…',
      logCopyEmpty: 'Nothing to copy',
      logCopySuccess: 'Logs copied',
      logCopyError: 'Failed to copy',
      knowledgeServiceUnavailable: 'Service unavailable for your access level',
      knowledgeServiceLoading: 'Loading…',
      knowledgeServiceNoData: 'No data',
      knowledgeServiceUpgrade: 'Service unavailable (update backend)',
      knowledgeServiceFetchError: 'Failed to fetch status',
      knowledgeServiceSaving: 'Saving…',
      knowledgeServiceSaved: 'Saved',
      knowledgeServiceSaveError: 'Save failed',
      knowledgeUploadProcessing: 'Uploading…',
      knowledgeUploadSuccess: 'Uploaded {count} item(s).',
      knowledgeUploadPartial: 'Uploaded {success} of {total}. Errors: {error}',
      knowledgeUploadError: 'Upload failed: {error}',
      knowledgeUploadNothing: 'Add text or choose files before saving.',
      knowledgeUploadProjectMissing: 'Select a project before uploading.',
      kbLimitLabel: 'Limit',
      logLinesLabel: 'Lines:',
      authTitle: 'Administrator sign-in',
      authPrompt: 'Enter administrator credentials to continue.',
      authHint: 'Credentials are sent to {host}.',
      authUsernameLabel: 'Username',
      authUsernamePlaceholder: 'Admin username',
      authPasswordLabel: 'Password',
      authPasswordPlaceholder: 'Admin password',
      authSubmit: 'Sign in',
      authCancel: 'Cancel',
      authStatusChecking: 'Checking credentials…',
      authErrorMissing: 'Enter username and password',
      authErrorInvalid: 'Invalid credentials',
      authErrorNetwork: 'Could not verify credentials',
      errorAuthRequired: 'Administrator credentials required',
      developerCredit: 'Created by dev-bot.su',
      projectMenuTitle: 'Project menu',
      feedbackSectionTitle: 'Feedback',
      feedbackStatusOpen: 'Open',
      feedbackStatusInProgress: 'In progress',
      feedbackStatusDone: 'Resolved',
      feedbackStatusDismissed: 'Dismissed',
      feedbackNoItems: 'No feedback yet.',
      feedbackUpdated: 'Updated',
      feedbackError: 'Failed to load feedback',
      backupCardTitle: 'Backups',
      backupScheduleTitle: 'Schedule',
      backupEnableLabel: 'Enable daily backup',
      backupTimeLabel: 'Run at',
      backupTimezoneLabel: 'Timezone',
      backupFolderLabel: 'Remote folder',
      backupFolderPlaceholder: 'sitellm-backups',
      backupTokenLabel: 'OAuth token',
      backupTokenPlaceholder: 'Paste Yandex.Disk OAuth token',
      backupTokenSave: 'Save token',
      backupTokenClear: 'Remove token',
      backupTokenSaved: 'Token saved',
      backupTokenRequired: 'Enter OAuth token',
      backupScheduleSave: 'Save schedule',
      backupManualTitle: 'Manual actions',
      backupRunNow: 'Create backup now',
      backupRefresh: 'Refresh status',
      backupRestoreLabel: 'Restore from path',
      backupRestorePlaceholder: '/backups/archive.gz',
      backupRestoreButton: 'Restore',
      backupJobsTitle: 'Recent jobs',
      backupJobsEmpty: 'No jobs yet.',
      backupStatusLineWaiting: 'Backups disabled',
      backupStatusLineQueued: 'Next run queued',
      backupStatusLineActive: 'Backup in progress…',
      backupTokenMissing: 'Token not configured',
      backupStatusLastRun: 'Last run: {value}',
      backupStatusLastSuccess: 'Last success: {value}',
      backupStatusNever: 'No backups performed yet',
      backupJobStatusQueued: 'Status: queued',
      backupJobStatusRunning: 'Status: running',
      backupJobStatusCompleted: 'Status: completed',
      backupJobStatusFailed: 'Status: failed',
      backupJobOperationBackup: 'Backup',
      backupJobOperationRestore: 'Restore',
      backupJobRestore: 'Restore',
      backupJobCopyPath: 'Copy path',
      backupJobsFetchError: 'Failed to load backup status',
      backupSaveSuccess: 'Backup settings saved',
      backupSaveError: 'Could not save settings',
      backupRunQueued: 'Backup job queued',
      backupRestoreQueued: 'Restore job queued',
      backupRestorePathMissing: 'Specify remote path',
      backupActiveJobMessage: 'An operation is already running'
    };

    function createLanguage(name, dir, overrides = {}) {
      return { name, dir, strings: { ...BASE_STRINGS, ...overrides } };
    }

    const LANGUAGES = {
      en: createLanguage('English', 'ltr'),
      es: createLanguage('Español', 'ltr', {
        pillOperations: 'Operaciones',
        headerTitle: 'Panel de control del rastreador',
        headerSubtitle: 'Gestiona el rastreo, la base de conocimiento y la infraestructura desde un solo panel',
        buttonReorder: 'Reordenar bloques',
        buttonReorderDone: 'Listo',
        buttonLogout: 'Cerrar sesión',
        languageLabel: 'Idioma',
        overviewProjectTitle: 'Proyecto',
        overviewProjectMeta: 'Sin proyecto seleccionado',
        overviewCrawlerTitle: 'Rastreo',
        overviewResourcesTitle: 'Recursos',
        overviewLLMTitle: 'Información del LLM',
        overviewLLMEmpty: 'Los prompts recientes aparecerán aquí',
        overviewBuildTitle: 'Versión',
        cardProjectsTitle: 'Proyectos',
        buttonAddProject: 'Añadir proyecto',
        buttonRefreshProjects: 'Actualizar lista',
        crawlerStatusTitle: 'Estado del rastreador',
        crawlerQueued: 'En cola: {value}',
        crawlerInProgress: 'En progreso: {value}',
        crawlerDone: 'Completadas: {value}',
        crawlerFailed: 'Fallidas: {value}',
        crawlerLast: 'Último: {value}',
        crawlerProjectLabel: 'Proyecto: {value}',
        crawlerLastUrls: 'Últimas URL',
        servicesTitle: 'Servicios',
        serviceMongo: 'Mongo: {value}',
        serviceRedis: 'Redis: {value}',
        serviceQdrant: 'Qdrant: {value}',
        serviceOverall: 'Estado: {value}',
        resourcesTitle: 'Recursos',
        resourceCpuApp: 'CPU (app): {value}',
        resourceCpuSys: 'CPU (sistema): {value}',
        resourceRam: 'RAM: {value}',
        resourceRss: 'RSS: {value}',
        resourceGpu: 'GPU: {value}',
        resourcePython: 'Python: {value}',
        manageSection: 'Gestión',
        crawlerLaunchTitle: 'Inicio del rastreador',
        crawlerLogsTooltip: 'Mostrar registros',
        crawlerLogsHeader: 'Registros del rastreador',
        crawlerLogsCopy: 'Copiar',
        crawlerLogsRefresh: 'Actualizar',
        crawlerLogsHide: 'Ocultar',
        crawlerLogsEmpty: 'Los registros se cargarán bajo demanda.',
        crawlerSelectProject: 'Selecciona un proyecto',
        crawlerLaunched: 'Iniciado',
        crawlerLaunchFailed: 'No se pudo iniciar',
        crawlerStartError: 'Error al iniciar el rastreador',
        crawlerStopping: 'Deteniendo…',
        crawlerStopFailed: 'No se pudo detener',
        crawlerStopError: 'Error al detener el rastreador',
        crawlerActionReset: 'Contadores reiniciados',
        crawlerActionDedup: 'Duplicados eliminados',
        crawlerActionNoData: 'Nada que copiar',
        crawlerActionProcessing: 'Trabajando…',
        crawlerActionExecuteError: 'Error al ejecutar la acción',
        crawlerStartButton: 'Iniciar',
        crawlerStopButton: 'Detener',
        crawlerResetButton: 'Reiniciar contadores',
        crawlerDedupButton: 'Eliminar URL duplicadas',
        crawlerStartUrl: 'URL inicial',
        crawlerDepth: 'Profundidad',
        crawlerPages: 'Páginas',
        crawlerCollectBooks: 'Guardar páginas completas para modo lectura',
        crawlerCollectMedex: 'Capturar enlaces de reserva Medesk',
        voiceTrainingTitle: 'Entrenamiento de voz',
        voiceTrainingSummary: 'Sube 3 o más clips limpios para que el asistente hable con la voz de tu proyecto.',
        voiceUploadButton: 'Subir clips',
        voiceRecordButton: 'Grabar clip',
        voiceRecordStopButton: 'Detener grabación',
        voiceSamplesEmpty: 'Aún no hay audios cargados.',
        voiceTrainButton: 'Entrenar voz personalizada',
        crawlerCollectBooks: 'Guardar páginas completas para modo lectura',
        crawlerCollectMedex: 'Capturar enlaces de reserva Medesk',
        promptAiStart: 'Generando…',
        promptAiReady: 'Prompt listo',
        promptAiStopped: 'Detenido',
        promptAiError: 'Error: {message}',
        promptAiInvalidDomain: 'Especifica un dominio o URL válido',
        promptAiEmpty: 'El modelo devolvió un resultado vacío',
        genericFailed: 'falló',
        logoutProgress: 'Cerrando sesión…',
        logCopyEmpty: 'Nada que copiar',
        logCopySuccess: 'Registros copiados',
        logCopyError: 'No se pudo copiar',
        knowledgeServiceUnavailable: 'Servicio no disponible para tu nivel de acceso',
        knowledgeServiceLoading: 'Cargando…',
        knowledgeServiceNoData: 'Sin datos',
        knowledgeServiceUpgrade: 'Servicio no disponible (actualiza el backend)',
        knowledgeServiceFetchError: 'Error al obtener el estado',
        knowledgeServiceSaving: 'Guardando…',
        knowledgeServiceSaved: 'Guardado',
        knowledgeServiceSaveError: 'Error al guardar'
      }),
      de: createLanguage('Deutsch', 'ltr', {
        pillOperations: 'Betrieb',
        headerTitle: 'Crawler-Steuerzentrale',
        headerSubtitle: 'Verwalte Crawling, Wissensbasis und Infrastruktur in einem Dashboard',
        buttonReorder: 'Blöcke neu ordnen',
        buttonReorderDone: 'Fertig',
        buttonLogout: 'Abmelden',
        languageLabel: 'Sprache',
        overviewProjectTitle: 'Projekt',
        overviewProjectMeta: 'Kein Projekt ausgewählt',
        overviewCrawlerTitle: 'Crawler',
        overviewResourcesTitle: 'Ressourcen',
        overviewLLMTitle: 'LLM-Einblicke',
        overviewLLMEmpty: 'Aktuelle Prompts erscheinen hier',
        overviewBuildTitle: 'Build',
        cardProjectsTitle: 'Projekte',
        buttonAddProject: 'Projekt hinzufügen',
        buttonRefreshProjects: 'Liste aktualisieren',
        crawlerStatusTitle: 'Crawler-Status',
        crawlerQueued: 'In Warteschlange: {value}',
        crawlerInProgress: 'In Arbeit: {value}',
        crawlerDone: 'Fertig: {value}',
        crawlerFailed: 'Fehlgeschlagen: {value}',
        crawlerLast: 'Zuletzt: {value}',
        crawlerProjectLabel: 'Projekt: {value}',
        crawlerLastUrls: 'Neueste URLs',
        servicesTitle: 'Dienste',
        serviceMongo: 'Mongo: {value}',
        serviceRedis: 'Redis: {value}',
        serviceQdrant: 'Qdrant: {value}',
        serviceOverall: 'Status: {value}',
        resourcesTitle: 'Ressourcen',
        resourceCpuApp: 'CPU (App): {value}',
        resourceCpuSys: 'CPU (System): {value}',
        resourceRam: 'RAM: {value}',
        resourceRss: 'RSS: {value}',
        resourceGpu: 'GPU: {value}',
        resourcePython: 'Python: {value}',
        manageSection: 'Verwaltung',
        crawlerLaunchTitle: 'Crawler-Start',
        crawlerLogsTooltip: 'Protokolle anzeigen',
        crawlerLogsHeader: 'Crawler-Protokolle',
        crawlerLogsCopy: 'Kopieren',
        crawlerLogsRefresh: 'Aktualisieren',
        crawlerLogsHide: 'Ausblenden',
        crawlerLogsEmpty: 'Protokolle werden bei Bedarf geladen.',
        crawlerSelectProject: 'Projekt auswählen',
        crawlerLaunched: 'Gestartet',
        crawlerLaunchFailed: 'Start fehlgeschlagen',
        crawlerStartError: 'Crawler-Startfehler',
        crawlerStopping: 'Wird gestoppt…',
        crawlerStopFailed: 'Stopp fehlgeschlagen',
        crawlerStopError: 'Crawler-Stoppfehler',
        crawlerActionReset: 'Zähler zurückgesetzt',
        crawlerActionDedup: 'Duplikate entfernt',
        crawlerActionNoData: 'Nichts zu kopieren',
        crawlerActionProcessing: 'In Arbeit…',
        crawlerActionExecuteError: 'Aktion konnte nicht ausgeführt werden',
        crawlerStartButton: 'Starten',
        crawlerStopButton: 'Stoppen',
        crawlerResetButton: 'Zähler zurücksetzen',
        crawlerDedupButton: 'Doppelte URLs entfernen',
        crawlerStartUrl: 'Start-URL',
        crawlerDepth: 'Tiefe',
        crawlerPages: 'Seiten',
        crawlerCollectBooks: 'Komplette Seiten für Lesemodus speichern',
        crawlerCollectMedex: 'Medesk-Buchungslinks sammeln',
        voiceTrainingTitle: 'Stimmtraining',
        voiceTrainingSummary: 'Laden Sie mindestens 3 saubere Sprachaufnahmen hoch, damit der Assistent mit Ihrer Stimme spricht.',
        voiceUploadButton: 'Clips hochladen',
        voiceRecordButton: 'Clip aufnehmen',
        voiceRecordStopButton: 'Aufnahme stoppen',
        voiceSamplesEmpty: 'Noch keine Audiodateien hochgeladen.',
        voiceTrainButton: 'Eigene Stimme trainieren',
        crawlerCollectBooks: 'Komplette Seiten für Lesemodus speichern',
        promptAiStart: 'Generiere…',
        promptAiReady: 'Prompt bereit',
        promptAiStopped: 'Gestoppt',
        promptAiError: 'Fehler: {message}',
        promptAiInvalidDomain: 'Gib eine gültige Domain oder URL an',
        promptAiEmpty: 'Modell gab ein leeres Ergebnis zurück',
        genericFailed: 'fehlgeschlagen',
        logoutProgress: 'Abmelden…',
        logCopyEmpty: 'Nichts zu kopieren',
        logCopySuccess: 'Protokolle kopiert',
        logCopyError: 'Kopieren fehlgeschlagen',
        knowledgeServiceUnavailable: 'Dienst für deine Zugriffsstufe nicht verfügbar',
        knowledgeServiceLoading: 'Lädt…',
        knowledgeServiceNoData: 'Keine Daten',
        knowledgeServiceUpgrade: 'Dienst nicht verfügbar (Backend aktualisieren)',
        knowledgeServiceFetchError: 'Status konnte nicht abgerufen werden',
        knowledgeServiceSaving: 'Speichern…',
        knowledgeServiceSaved: 'Gespeichert',
        knowledgeServiceSaveError: 'Speichern fehlgeschlagen'
      }),
      fr: createLanguage('Français', 'ltr', {
        pillOperations: 'Opérations',
        headerTitle: 'Panneau de contrôle du crawler',
        headerSubtitle: 'Gérez le crawling, la base de connaissances et l’infrastructure depuis un seul tableau de bord',
        buttonReorder: 'Réorganiser les blocs',
        buttonReorderDone: 'Terminé',
        buttonLogout: 'Déconnexion',
        languageLabel: 'Langue',
        overviewProjectTitle: 'Projet',
        overviewProjectMeta: 'Aucun projet sélectionné',
        overviewCrawlerTitle: 'Crawler',
        overviewResourcesTitle: 'Ressources',
        overviewLLMTitle: 'Aperçus LLM',
        overviewLLMEmpty: 'Les invites récentes apparaîtront ici',
        overviewBuildTitle: 'Version',
        cardProjectsTitle: 'Projets',
        buttonAddProject: 'Ajouter un projet',
        buttonRefreshProjects: 'Actualiser la liste',
        crawlerStatusTitle: 'Statut du crawler',
        crawlerQueued: 'En file d’attente : {value}',
        crawlerInProgress: 'En cours : {value}',
        crawlerDone: 'Terminé : {value}',
        crawlerFailed: 'Échecs : {value}',
        crawlerLast: 'Dernier : {value}',
        crawlerProjectLabel: 'Projet : {value}',
        crawlerLastUrls: 'Dernières URL',
        servicesTitle: 'Services',
        serviceMongo: 'Mongo : {value}',
        serviceRedis: 'Redis : {value}',
        serviceQdrant: 'Qdrant : {value}',
        serviceOverall: 'Statut : {value}',
        resourcesTitle: 'Ressources',
        resourceCpuApp: 'CPU (app) : {value}',
        resourceCpuSys: 'CPU (système) : {value}',
        resourceRam: 'RAM : {value}',
        resourceRss: 'RSS : {value}',
        resourceGpu: 'GPU : {value}',
        resourcePython: 'Python : {value}',
        manageSection: 'Gestion',
        crawlerLaunchTitle: 'Lancement du crawler',
        crawlerLogsTooltip: 'Afficher les journaux',
        crawlerLogsHeader: 'Journaux du crawler',
        crawlerLogsCopy: 'Copier',
        crawlerLogsRefresh: 'Actualiser',
        crawlerLogsHide: 'Masquer',
        crawlerLogsEmpty: 'Les journaux seront chargés à la demande.',
        crawlerSelectProject: 'Sélectionnez un projet',
        crawlerLaunched: 'Démarré',
        crawlerLaunchFailed: 'Échec du démarrage',
        crawlerStartError: 'Erreur de démarrage du crawler',
        crawlerStopping: 'Arrêt…',
        crawlerStopFailed: 'Échec de l’arrêt',
        crawlerStopError: 'Erreur d’arrêt du crawler',
        crawlerActionReset: 'Compteurs réinitialisés',
        crawlerActionDedup: 'Doublons supprimés',
        crawlerActionNoData: 'Rien à copier',
        crawlerActionProcessing: 'Traitement…',
        crawlerActionExecuteError: 'Impossible d’exécuter l’action',
        crawlerStartButton: 'Démarrer',
        crawlerStopButton: 'Arrêter',
        crawlerResetButton: 'Réinitialiser les compteurs',
        crawlerDedupButton: 'Supprimer les URL dupliquées',
        crawlerStartUrl: 'URL de départ',
        crawlerDepth: 'Profondeur',
        crawlerPages: 'Pages',
        crawlerCollectBooks: 'Conserver les pages complètes pour la lecture',
        crawlerCollectMedex: 'Collecter les liens de réservation Medesk',
        voiceTrainingTitle: 'Entraînement vocal',
        voiceTrainingSummary: 'Importez au moins 3 extraits audio propres pour que l’assistant parle avec la voix de votre projet.',
        voiceUploadButton: 'Téléverser des extraits',
        voiceRecordButton: 'Enregistrer un extrait',
        voiceRecordStopButton: 'Arrêter l\'enregistrement',
        voiceSamplesEmpty: 'Aucun extrait audio téléversé pour le moment.',
        voiceTrainButton: 'Entraîner la voix personnalisée',
        crawlerCollectBooks: 'Conserver les pages complètes pour la lecture',
        promptAiStart: 'Génération…',
        promptAiReady: 'Invite prête',
        promptAiStopped: 'Arrêté',
        promptAiError: 'Erreur : {message}',
        promptAiInvalidDomain: 'Indiquez un domaine ou une URL valide',
        promptAiEmpty: 'Le modèle a renvoyé un résultat vide',
        genericFailed: 'échec',
        logoutProgress: 'Déconnexion…',
        logCopyEmpty: 'Rien à copier',
        logCopySuccess: 'Journaux copiés',
        logCopyError: 'Copie impossible',
        knowledgeServiceUnavailable: 'Service indisponible pour votre niveau d’accès',
        knowledgeServiceLoading: 'Chargement…',
        knowledgeServiceNoData: 'Aucune donnée',
        knowledgeServiceUpgrade: 'Service indisponible (mettez à jour le backend)',
        knowledgeServiceFetchError: 'Échec de récupération du statut',
        knowledgeServiceSaving: 'Enregistrement…',
        knowledgeServiceSaved: 'Enregistré',
        knowledgeServiceSaveError: 'Échec de l’enregistrement'
      }),
      it: createLanguage('Italiano', 'ltr', {
        pillOperations: 'Operazioni',
        headerTitle: 'Pannello di controllo del crawler',
        headerSubtitle: 'Gestisci crawling, base di conoscenza e infrastruttura da un’unica dashboard',
        buttonReorder: 'Riordina blocchi',
        buttonReorderDone: 'Fine',
        buttonLogout: 'Esci',
        languageLabel: 'Lingua',
        overviewProjectTitle: 'Progetto',
        overviewProjectMeta: 'Nessun progetto selezionato',
        overviewCrawlerTitle: 'Crawler',
        overviewResourcesTitle: 'Risorse',
        overviewLLMTitle: 'Approfondimenti LLM',
        overviewLLMEmpty: 'I prompt recenti appariranno qui',
        overviewBuildTitle: 'Build',
        cardProjectsTitle: 'Progetti',
        buttonAddProject: 'Aggiungi progetto',
        buttonRefreshProjects: 'Aggiorna elenco',
        crawlerStatusTitle: 'Stato del crawler',
        crawlerQueued: 'In coda: {value}',
        crawlerInProgress: 'In esecuzione: {value}',
        crawlerDone: 'Completati: {value}',
        crawlerFailed: 'Non riusciti: {value}',
        crawlerLast: 'Ultimo: {value}',
        crawlerProjectLabel: 'Progetto: {value}',
        crawlerLastUrls: 'Ultimi URL',
        servicesTitle: 'Servizi',
        serviceMongo: 'Mongo: {value}',
        serviceRedis: 'Redis: {value}',
        serviceQdrant: 'Qdrant: {value}',
        serviceOverall: 'Stato: {value}',
        resourcesTitle: 'Risorse',
        resourceCpuApp: 'CPU (app): {value}',
        resourceCpuSys: 'CPU (sistema): {value}',
        resourceRam: 'RAM: {value}',
        resourceRss: 'RSS: {value}',
        resourceGpu: 'GPU: {value}',
        resourcePython: 'Python: {value}',
        manageSection: 'Gestione',
        crawlerLaunchTitle: 'Avvio crawler',
        crawlerLogsTooltip: 'Mostra log',
        crawlerLogsHeader: 'Log del crawler',
        crawlerLogsCopy: 'Copia',
        crawlerLogsRefresh: 'Aggiorna',
        crawlerLogsHide: 'Nascondi',
        crawlerLogsEmpty: 'I log verranno caricati su richiesta.',
        crawlerSelectProject: 'Seleziona un progetto',
        crawlerLaunched: 'Avviato',
        crawlerLaunchFailed: 'Avvio non riuscito',
        crawlerStartError: 'Errore di avvio del crawler',
        crawlerStopping: 'Arresto…',
        crawlerStopFailed: 'Arresto non riuscito',
        crawlerStopError: 'Errore di arresto del crawler',
        crawlerActionReset: 'Contatori azzerati',
        crawlerActionDedup: 'Duplicati rimossi',
        crawlerActionNoData: 'Niente da copiare',
        crawlerActionProcessing: 'Elaborazione…',
        crawlerActionExecuteError: 'Impossibile eseguire l’azione',
        crawlerStartButton: 'Avvia',
        crawlerStopButton: 'Ferma',
        crawlerResetButton: 'Azzera contatori',
        crawlerDedupButton: 'Rimuovi URL duplicati',
        crawlerStartUrl: 'URL iniziale',
        crawlerDepth: 'Profondità',
        crawlerPages: 'Pagine',
        crawlerCollectBooks: 'Salva le pagine complete per la lettura',
        crawlerCollectMedex: 'Raccogli link di prenotazione Medesk',
        voiceTrainingTitle: 'Addestramento voce',
        voiceTrainingSummary: 'Carica almeno 3 clip pulite per far parlare l’assistente con la voce del progetto.',
        voiceUploadButton: 'Carica clip',
        voiceRecordButton: 'Registra clip',
        voiceRecordStopButton: 'Ferma registrazione',
        voiceSamplesEmpty: 'Nessuna traccia caricata.',
        voiceTrainButton: 'Addestra voce personalizzata',
        crawlerCollectBooks: 'Salva le pagine complete per la lettura',
        promptAiStart: 'Generazione…',
        promptAiReady: 'Prompt pronto',
        promptAiStopped: 'Interrotto',
        promptAiError: 'Errore: {message}',
        promptAiInvalidDomain: 'Specifica un dominio o URL valido',
        promptAiEmpty: 'Il modello ha restituito un risultato vuoto',
        genericFailed: 'non riuscito',
        logoutProgress: 'Disconnessione…',
        logCopyEmpty: 'Niente da copiare',
        logCopySuccess: 'Log copiati',
        logCopyError: 'Copia non riuscita',
        knowledgeServiceUnavailable: 'Servizio non disponibile per il tuo livello di accesso',
        knowledgeServiceLoading: 'Caricamento…',
        knowledgeServiceNoData: 'Nessun dato',
        knowledgeServiceUpgrade: 'Servizio non disponibile (aggiorna il backend)',
        knowledgeServiceFetchError: 'Impossibile ottenere lo stato',
        knowledgeServiceSaving: 'Salvataggio…',
        knowledgeServiceSaved: 'Salvato',
        knowledgeServiceSaveError: 'Errore durante il salvataggio'
      }),
      pt: createLanguage('Português', 'ltr', {
        pillOperations: 'Operações',
        headerTitle: 'Painel de controle do crawler',
        headerSubtitle: 'Gerencie o rastreamento, a base de conhecimento e a infraestrutura em um único painel',
        buttonReorder: 'Reordenar blocos',
        buttonReorderDone: 'Concluído',
        buttonLogout: 'Sair',
        languageLabel: 'Idioma',
        overviewProjectTitle: 'Projeto',
        overviewProjectMeta: 'Nenhum projeto selecionado',
        overviewCrawlerTitle: 'Crawler',
        overviewResourcesTitle: 'Recursos',
        overviewLLMTitle: 'Insights do LLM',
        overviewLLMEmpty: 'Os prompts recentes aparecerão aqui',
        overviewBuildTitle: 'Build',
        cardProjectsTitle: 'Projetos',
        buttonAddProject: 'Adicionar projeto',
        buttonRefreshProjects: 'Atualizar lista',
        crawlerStatusTitle: 'Status do crawler',
        crawlerQueued: 'Na fila: {value}',
        crawlerInProgress: 'Em andamento: {value}',
        crawlerDone: 'Concluídos: {value}',
        crawlerFailed: 'Falhas: {value}',
        crawlerLast: 'Último: {value}',
        crawlerProjectLabel: 'Projeto: {value}',
        crawlerLastUrls: 'Últimas URLs',
        servicesTitle: 'Serviços',
        serviceMongo: 'Mongo: {value}',
        serviceRedis: 'Redis: {value}',
        serviceQdrant: 'Qdrant: {value}',
        serviceOverall: 'Status: {value}',
        resourcesTitle: 'Recursos',
        resourceCpuApp: 'CPU (app): {value}',
        resourceCpuSys: 'CPU (sistema): {value}',
        resourceRam: 'RAM: {value}',
        resourceRss: 'RSS: {value}',
        resourceGpu: 'GPU: {value}',
        resourcePython: 'Python: {value}',
        manageSection: 'Gestão',
        crawlerLaunchTitle: 'Inicialização do crawler',
        crawlerLogsTooltip: 'Mostrar logs',
        crawlerLogsHeader: 'Logs do crawler',
        crawlerLogsCopy: 'Copiar',
        crawlerLogsRefresh: 'Atualizar',
        crawlerLogsHide: 'Ocultar',
        crawlerLogsEmpty: 'Os logs serão carregados sob demanda.',
        crawlerSelectProject: 'Selecione um projeto',
        crawlerLaunched: 'Iniciado',
        crawlerLaunchFailed: 'Falha ao iniciar',
        crawlerStartError: 'Erro ao iniciar o crawler',
        crawlerStopping: 'Parando…',
        crawlerStopFailed: 'Falha ao parar',
        crawlerStopError: 'Erro ao parar o crawler',
        crawlerActionReset: 'Contadores redefinidos',
        crawlerActionDedup: 'Duplicatas removidas',
        crawlerActionNoData: 'Nada para copiar',
        crawlerActionProcessing: 'Processando…',
        crawlerActionExecuteError: 'Falha ao executar ação',
        crawlerStartButton: 'Iniciar',
        crawlerStopButton: 'Parar',
        crawlerResetButton: 'Redefinir contadores',
        crawlerDedupButton: 'Remover URLs duplicadas',
        crawlerStartUrl: 'URL inicial',
        crawlerDepth: 'Profundidade',
        crawlerPages: 'Páginas',
        crawlerCollectBooks: 'Guardar páginas completas para modo leitura',
        crawlerCollectMedex: 'Coletar links de agendamento Medesk',
        voiceTrainingTitle: 'Treinamento de voz',
        voiceTrainingSummary: 'Envie 3+ clipes limpos para que o assistente fale com a voz do projeto.',
        voiceUploadButton: 'Enviar clipes',
        voiceRecordButton: 'Gravar clipe',
        voiceRecordStopButton: 'Parar gravação',
        voiceSamplesEmpty: 'Nenhum áudio enviado ainda.',
        voiceTrainButton: 'Treinar voz personalizada',
        crawlerCollectBooks: 'Guardar páginas completas para modo leitura',
        promptAiStart: 'Gerando…',
        promptAiReady: 'Prompt pronto',
        promptAiStopped: 'Parado',
        promptAiError: 'Erro: {message}',
        promptAiInvalidDomain: 'Informe um domínio ou URL válido',
        promptAiEmpty: 'O modelo retornou um resultado vazio',
        genericFailed: 'falhou',
        logoutProgress: 'Saindo…',
        logCopyEmpty: 'Nada para copiar',
        logCopySuccess: 'Logs copiados',
        logCopyError: 'Falha ao copiar',
        knowledgeServiceUnavailable: 'Serviço indisponível para o seu nível de acesso',
        knowledgeServiceLoading: 'Carregando…',
        knowledgeServiceNoData: 'Sem dados',
        knowledgeServiceUpgrade: 'Serviço indisponível (atualize o backend)',
        knowledgeServiceFetchError: 'Falha ao obter status',
        knowledgeServiceSaving: 'Salvando…',
        knowledgeServiceSaved: 'Salvo',
        knowledgeServiceSaveError: 'Erro ao salvar'
      }),
      ru: createLanguage('Русский', 'ltr', {
        pageTitle: 'Панель управления краулером',
        pillOperations: 'Операции',
        headerTitle: 'Панель управления краулером',
        headerSubtitle: 'Управляйте краулингом, базой знаний и окружением в одном окне',
        buttonReorder: 'Упорядочить блоки',
        buttonReorderDone: 'Готово',
        buttonLogout: 'Выйти',
        languageLabel: 'Язык',
        overviewProjectTitle: 'Проект',
        overviewProjectMeta: 'Нет выбранного проекта',
        overviewCrawlerTitle: 'Краулинг',
        overviewResourcesTitle: 'Ресурсы',
        overviewLLMTitle: 'LLM мысли',
        overviewLLMEmpty: 'История запросов появится здесь',
        overviewBuildTitle: 'Сборка',
        cardProjectsTitle: 'Проекты',
        projectMenuTitle: 'Проектное меню',
        buttonAddProject: 'Добавить проект',
        buttonRefreshProjects: 'Обновить список',
        crawlerStatusTitle: 'Статус краулера',
        crawlerQueued: 'В очереди: {value}',
        crawlerInProgress: 'В работе: {value}',
        crawlerDone: 'Готово: {value}',
        crawlerFailed: 'Ошибок: {value}',
        crawlerLast: 'Последний: {value}',
        crawlerProjectLabel: 'Проект: {value}',
        crawlerLastUrls: 'Последние URL',
        servicesTitle: 'Сервисы',
        serviceMongo: 'Mongo: {value}',
        serviceRedis: 'Redis: {value}',
        serviceQdrant: 'Qdrant: {value}',
        serviceOverall: 'Статус: {value}',
        resourcesTitle: 'Ресурсы',
        resourceCpuApp: 'CPU (приложение): {value}',
        resourceCpuSys: 'CPU (система): {value}',
        resourceRam: 'RAM: {value}',
        resourceRss: 'RSS: {value}',
        resourceGpu: 'GPU: {value}',
        resourcePython: 'Python: {value}',
        manageSection: 'Управление',
        crawlerLaunchTitle: 'Запуск краулера',
        crawlerLogsTooltip: 'Показать логи',
        crawlerLogsHeader: 'Логи краулера',
        crawlerLogsCopy: 'Скопировать',
        crawlerLogsRefresh: 'Обновить',
        crawlerLogsHide: 'Скрыть',
        crawlerLogsEmpty: 'Логи будут загружены по запросу.',
        crawlerSelectProject: 'Выберите проект',
        crawlerLaunched: 'Запущено',
        crawlerLaunchFailed: 'Не удалось запустить',
        crawlerStartError: 'Ошибка запуска краулера',
        crawlerStopping: 'Останавливаем…',
        crawlerStopFailed: 'Не удалось остановить',
        crawlerStopError: 'Ошибка остановки',
        crawlerActionReset: 'Счётчики сброшены',
        crawlerActionDedup: 'Дубликаты удалены',
        crawlerActionNoData: 'Нет данных для копирования',
        crawlerActionProcessing: 'Выполняем…',
        crawlerActionExecuteError: 'Ошибка выполнения действия',
        crawlerNoteIndexing: 'Идёт индексирование или есть ошибки; проверьте счётчики.',
        crawlerNoteLlmPaused: 'LLM недоступно — обработка очереди приостановлена.',
        crawlerStartButton: 'Запустить',
        crawlerStopButton: 'Остановить',
        crawlerResetButton: 'Сбросить счётчики',
        crawlerDedupButton: 'Убрать дубликаты URL',
        crawlerStartUrl: 'Стартовый URL',
        crawlerDepth: 'Глубина',
        crawlerPages: 'Страницы',
        crawlerCollectBooks: 'Сохранять страницы целиком для режима чтения',
        crawlerCollectMedex: 'Собирать ссылки записи Medesk',
        voiceTrainingTitle: 'Обучение голоса',
        voiceTrainingSummary: 'Загрузите 3+ аудиодорожки с чистой речью, чтобы ассистент говорил голосом проекта.',
        voiceUploadButton: 'Загрузить дорожки',
        voiceRecordButton: 'Записать дорожку',
        voiceRecordStopButton: 'Остановить запись',
        voiceSamplesEmpty: 'Дорожки не загружены.',
        voiceTrainButton: 'Обучить голос',
        ollamaServerDefaultTitle: 'По умолчанию',
        ollamaServerUnnamed: 'Без названия',
        ollamaServerHealthy: 'здоров',
        ollamaServerError: 'ошибка',
        ollamaServerDisabled: 'отключён',
        ollamaServerStatusTitle: 'Статус',
        ollamaServerUpdated: 'Состояние сервера обновлено.',
        ollamaServerUpdatedAt: 'обновлено {value}',
        ollamaServerToggleOn: 'Включён',
        ollamaServerToggleOff: 'Выключен',
        ollamaServerDeleting: 'Удаляем сервер…',
        ollamaServerDeleted: 'Сервер удалён.',
        ollamaServerSaving: 'Сохраняем сервер…',
        ollamaServerSaved: 'Сервер сохранён.',
        ollamaServerUpdatingState: 'Включаем сервер…',
        ollamaServerDisabling: 'Отключаем сервер…',
        ollamaServersSummary: 'Всего: {total}. Включены: {enabled}. Доступны: {active}.',
        ollamaServersEmpty: 'Нет зарегистрированных серверов Ollama.',
        ollamaServersNone: 'Серверы не настроены.',
        ollamaServerToggleTextOn: 'Включён',
        ollamaServerToggleTextOff: 'Выключен',
        ollamaServerFormInvalid: 'Укажите имя и адрес сервера.',
        ollamaServerInstallStarted: 'Установка модели {model} запущена.',
        ollamaServerDefaultLabel: 'Сервер по умолчанию',
        ollamaServerHealthyUnknown: 'неизвестно',
        ollamaLatencyLabel: 'Задержка',
        ollamaLatencyValue: '{value} мс',
        ollamaRequestsPerHour: 'Запросов/час',
        ollamaInFlight: 'В работе',
        ollamaButtonDelete: 'Удалить',
        ollamaActionGeneralError: 'Ошибка: {error}',
        ollamaActionInstallError: 'Ошибка установки: {error}',
        ollamaActionSaveError: 'Ошибка сохранения: {error}',
        ollamaActionDeleteError: 'Ошибка удаления: {error}',
        ollamaActionUpdateError: 'Ошибка обновления: {error}',
        ollamaCatalogSummary: 'Локальная команда Ollama доступна. Установлено моделей: {count}.',
        ollamaCatalogRemoteSummary: 'Доступен удалённый сервер Ollama. Установлено моделей: {count}.',
        ollamaCatalogHybridSummary: 'Доступны локальная CLI и удалённые серверы Ollama. Установлено моделей: {count}.',
        ollamaCatalogUnavailable: 'Каталог недоступен: команда ollama не найдена, но модели обнаружены.',
        ollamaCommandMissing: 'Команда ollama не найдена на сервере.',
        ollamaCatalogRefreshing: 'Обновляем каталог…',
        ollamaCatalogLoadError: 'Не удалось загрузить каталог: {error}',
        ollamaInstalledEmpty: 'Нет установленных моделей.',
        ollamaPopularEmpty: 'Нет рекомендованных моделей.',
        ollamaJobsEmpty: 'Нет активных установок.',
        ollamaInstallButton: 'Установить',
        ollamaInstalling: 'Установка…',
        ollamaJobPending: 'В очереди',
        ollamaJobRunning: 'Устанавливается…',
      ollamaJobSuccess: 'Установлено',
        ollamaJobError: 'Ошибка установки',
        ollamaJobErrorUnavailable: '{model} недоступна на сервере',
        ollamaJobErrorMessage: '{message}',
        ollamaRefreshUpdating: 'Обновляем список…',
        ollamaRefreshError: 'Ошибка обновления: {error}',
        ollamaServerSavingError: 'Ошибка сохранения сервера: {error}',
        projectsModelPlaceholder: '—',
        projectDomainHint: 'Вставьте полный адрес, например https://example.com',
        projectDomainPlaceholder: 'https://example.com',
        promptAiStart: 'Генерируем…',
        promptAiReady: 'Промт готов',
        promptAiStopped: 'Остановлено',
        promptAiError: 'Ошибка: {message}',
        promptAiInvalidDomain: 'Укажите корректный домен или URL',
        promptAiEmpty: 'Модель вернула пустой результат',
        genericFailed: 'не удалось',
        logoutProgress: 'Выходим…',
        logCopyEmpty: 'Нет данных для копирования',
        logCopySuccess: 'Логи скопированы',
        logCopyError: 'Не удалось скопировать',
        knowledgeServiceUnavailable: 'Сервис недоступен для вашего доступа',
        knowledgeServiceLoading: 'Загружаем…',
        knowledgeServiceNoData: 'Нет данных',
        knowledgeServiceUpgrade: 'Сервис недоступен (обновите backend)',
        knowledgeServiceFetchError: 'Не удалось получить статус',
        knowledgeServiceSaving: 'Сохраняем…',
        knowledgeServiceSaved: 'Сохранено',
        knowledgeServiceSaveError: 'Ошибка сохранения',
        knowledgeUploadProcessing: 'Загружаем…',
        knowledgeUploadSuccess: 'Загружено объектов: {count}.',
        knowledgeUploadPartial: 'Загружено {success} из {total}. Ошибка: {error}',
        knowledgeUploadError: 'Ошибка загрузки: {error}',
        knowledgeUploadNothing: 'Добавьте текст или выберите файлы перед сохранением.',
        knowledgeUploadProjectMissing: 'Выберите проект перед загрузкой.',
        kbLimitLabel: 'Лимит',
        logLinesLabel: 'Строк:',
        backupCardTitle: 'Резервные копии',
        backupScheduleTitle: 'Расписание',
        backupEnableLabel: 'Включить ежедневное резервирование',
        backupTimeLabel: 'Время запуска',
        backupTimezoneLabel: 'Часовой пояс',
        backupFolderLabel: 'Папка на Яндекс.Диске',
        backupFolderPlaceholder: 'sitellm-backups',
        backupTokenLabel: 'OAuth токен',
        backupTokenPlaceholder: 'Вставьте OAuth токен Яндекс.Диска',
        backupTokenSave: 'Сохранить токен',
        backupTokenClear: 'Удалить токен',
        backupTokenSaved: 'Токен сохранён',
        backupTokenRequired: 'Введите OAuth токен',
        backupScheduleSave: 'Сохранить расписание',
        backupManualTitle: 'Ручные действия',
        backupRunNow: 'Создать резервную копию',
        backupRefresh: 'Обновить статус',
        backupRestoreLabel: 'Восстановить по пути',
        backupRestorePlaceholder: '/backups/archive.gz',
        backupRestoreButton: 'Восстановить',
        backupJobsTitle: 'Журнал операций',
        backupJobsEmpty: 'Пока нет записей.',
        backupStatusLineWaiting: 'Резервирование выключено',
        backupStatusLineQueued: 'Задача поставлена в очередь',
        backupStatusLineActive: 'Резервное копирование выполняется…',
        backupTokenMissing: 'Токен не настроен',
        backupStatusLastRun: 'Последний запуск: {value}',
        backupStatusLastSuccess: 'Последний успешный запуск: {value}',
        backupStatusNever: 'Резервные копии ещё не создавались',
        backupJobStatusQueued: 'Статус: в очереди',
        backupJobStatusRunning: 'Статус: выполняется',
        backupJobStatusCompleted: 'Статус: завершено',
        backupJobStatusFailed: 'Статус: ошибка',
        backupJobOperationBackup: 'Резервная копия',
        backupJobOperationRestore: 'Восстановление',
        backupJobRestore: 'Восстановить',
        backupJobCopyPath: 'Скопировать путь',
        backupJobsFetchError: 'Не удалось загрузить статус резервирования',
        backupSaveSuccess: 'Настройки сохранены',
        backupSaveError: 'Не удалось сохранить настройки',
        backupRunQueued: 'Задача резервирования поставлена',
        backupRestoreQueued: 'Задача восстановления поставлена',
        backupRestorePathMissing: 'Укажите путь на диске',
        backupActiveJobMessage: 'Уже выполняется операция',
        authTitle: 'Вход администратора',
        authPrompt: 'Введите учетные данные администратора, чтобы продолжить.',
        authHint: 'Учетные данные будут отправлены на {host}.',
        authUsernameLabel: 'Логин',
        authUsernamePlaceholder: 'Имя администратора',
        authPasswordLabel: 'Пароль',
        authPasswordPlaceholder: 'Пароль администратора',
        authSubmit: 'Войти',
        authCancel: 'Отмена',
        authStatusChecking: 'Проверяем данные…',
        authErrorMissing: 'Введите логин и пароль',
        authErrorInvalid: 'Неверные учетные данные',
        authErrorNetwork: 'Не удалось проверить учетные данные',
        errorAuthRequired: 'Требуется вход администратора',
        developerCredit: 'Создано дев-бот-су'
      }),
      zh: createLanguage('中文', 'ltr', {
        pillOperations: '运维',
        headerTitle: '爬虫控制面板',
        headerSubtitle: '在一个仪表盘中管理爬取、知识库和基础设施',
        buttonReorder: '重新排列模块',
        buttonReorderDone: '完成',
        buttonLogout: '退出',
        languageLabel: '语言',
        overviewProjectTitle: '项目',
        overviewProjectMeta: '未选择项目',
        overviewCrawlerTitle: '爬虫',
        overviewResourcesTitle: '资源',
        overviewLLMTitle: 'LLM 洞察',
        overviewLLMEmpty: '最近的提示词将显示在这里',
        overviewBuildTitle: '构建',
        cardProjectsTitle: '项目',
        buttonAddProject: '添加项目',
        buttonRefreshProjects: '刷新列表',
        crawlerStatusTitle: '爬虫状态',
        crawlerQueued: '排队：{value}',
        crawlerInProgress: '处理中：{value}',
        crawlerDone: '完成：{value}',
        crawlerFailed: '失败：{value}',
        crawlerLast: '最近：{value}',
        crawlerProjectLabel: '项目：{value}',
        crawlerLastUrls: '最新 URL',
        servicesTitle: '服务',
        serviceMongo: 'Mongo：{value}',
        serviceRedis: 'Redis：{value}',
        serviceQdrant: 'Qdrant：{value}',
        serviceOverall: '状态：{value}',
        resourcesTitle: '资源',
        resourceCpuApp: 'CPU（应用）：{value}',
        resourceCpuSys: 'CPU（系统）：{value}',
        resourceRam: '内存：{value}',
        resourceRss: 'RSS：{value}',
        resourceGpu: 'GPU：{value}',
        resourcePython: 'Python：{value}',
        manageSection: '管理',
        crawlerLaunchTitle: '启动爬虫',
        crawlerLogsTooltip: '查看日志',
        crawlerLogsHeader: '爬虫日志',
        crawlerLogsCopy: '复制',
        crawlerLogsRefresh: '刷新',
        crawlerLogsHide: '隐藏',
        crawlerLogsEmpty: '日志将按需加载。',
        crawlerSelectProject: '选择项目',
        crawlerLaunched: '已启动',
        crawlerLaunchFailed: '启动失败',
        crawlerStartError: '爬虫启动错误',
        crawlerStopping: '正在停止…',
        crawlerStopFailed: '停止失败',
        crawlerStopError: '爬虫停止错误',
        crawlerActionReset: '计数已重置',
        crawlerActionDedup: '已移除重复项',
        crawlerActionNoData: '没有可复制的内容',
        crawlerActionProcessing: '处理中…',
        crawlerActionExecuteError: '执行操作失败',
        crawlerStartButton: '启动',
        crawlerStopButton: '停止',
        crawlerResetButton: '重置计数',
        crawlerDedupButton: '移除重复 URL',
        crawlerStartUrl: '起始 URL',
        crawlerDepth: '深度',
        crawlerPages: '页面',
        crawlerCollectBooks: '为阅读模式保存完整页面',
        crawlerCollectMedex: '收集 Medesk 预约链接',
        voiceTrainingTitle: '语音训练',
        voiceTrainingSummary: '上传至少 3 段干净语音，帮助助手学会项目专属的声音。',
        voiceUploadButton: '上传音频',
        voiceRecordButton: '录制音频',
        voiceRecordStopButton: '停止录音',
        voiceSamplesEmpty: '尚未上传音频片段。',
        voiceTrainButton: '训练自定义语音',
        promptAiStart: '正在生成…',
        promptAiReady: '提示词已就绪',
        promptAiStopped: '已停止',
        promptAiError: '错误：{message}',
        promptAiInvalidDomain: '请指定有效的域名或 URL',
        promptAiEmpty: '模型返回了空结果',
        genericFailed: '失败',
        logoutProgress: '正在退出…',
        logCopyEmpty: '没有可复制的内容',
        logCopySuccess: '日志已复制',
        logCopyError: '复制失败',
        knowledgeServiceUnavailable: '当前权限无法使用该服务',
        knowledgeServiceLoading: '加载中…',
        knowledgeServiceNoData: '暂无数据',
        knowledgeServiceUpgrade: '服务不可用（请更新后端）',
        knowledgeServiceFetchError: '获取状态失败',
        knowledgeServiceSaving: '保存中…',
        knowledgeServiceSaved: '已保存',
        knowledgeServiceSaveError: '保存失败'
      }),
      ja: createLanguage('日本語', 'ltr', {
        pillOperations: '運用',
        headerTitle: 'クローラー管理パネル',
        headerSubtitle: 'クロール、ナレッジベース、インフラをひとつのダッシュボードで管理',
        buttonReorder: 'ブロックを並べ替え',
        buttonReorderDone: '完了',
        buttonLogout: 'ログアウト',
        languageLabel: '言語',
        overviewProjectTitle: 'プロジェクト',
        overviewProjectMeta: 'プロジェクトが選択されていません',
        overviewCrawlerTitle: 'クローラー',
        overviewResourcesTitle: 'リソース',
        overviewLLMTitle: 'LLM インサイト',
        overviewLLMEmpty: '最近のプロンプトがここに表示されます',
        overviewBuildTitle: 'ビルド',
        cardProjectsTitle: 'プロジェクト',
        buttonAddProject: 'プロジェクトを追加',
        buttonRefreshProjects: 'リストを更新',
        crawlerStatusTitle: 'クローラーの状況',
        crawlerQueued: '待機中: {value}',
        crawlerInProgress: '実行中: {value}',
        crawlerDone: '完了: {value}',
        crawlerFailed: '失敗: {value}',
        crawlerLast: '最新: {value}',
        crawlerProjectLabel: 'プロジェクト: {value}',
        crawlerLastUrls: '最新の URL',
        servicesTitle: 'サービス',
        serviceMongo: 'Mongo: {value}',
        serviceRedis: 'Redis: {value}',
        serviceQdrant: 'Qdrant: {value}',
        serviceOverall: 'ステータス: {value}',
        resourcesTitle: 'リソース',
        resourceCpuApp: 'CPU (アプリ): {value}',
        resourceCpuSys: 'CPU (システム): {value}',
        resourceRam: 'RAM: {value}',
        resourceRss: 'RSS: {value}',
        resourceGpu: 'GPU: {value}',
        resourcePython: 'Python: {value}',
        manageSection: '管理',
        crawlerLaunchTitle: 'クローラーの起動',
        crawlerLogsTooltip: 'ログを表示',
        crawlerLogsHeader: 'クローラーログ',
        crawlerLogsCopy: 'コピー',
        crawlerLogsRefresh: '更新',
        crawlerLogsHide: '非表示',
        crawlerLogsEmpty: 'ログは必要に応じて読み込まれます。',
        crawlerSelectProject: 'プロジェクトを選択',
        crawlerLaunched: '開始しました',
        crawlerLaunchFailed: '開始に失敗しました',
        crawlerStartError: 'クローラー起動エラー',
        crawlerStopping: '停止しています…',
        crawlerStopFailed: '停止に失敗しました',
        crawlerStopError: 'クローラー停止エラー',
        crawlerActionReset: 'カウンターをリセットしました',
        crawlerActionDedup: '重複を削除しました',
        crawlerActionNoData: 'コピーするものがありません',
        crawlerActionProcessing: '処理中…',
        crawlerActionExecuteError: '操作の実行に失敗しました',
        crawlerStartButton: '開始',
        crawlerStopButton: '停止',
        crawlerResetButton: 'カウンターをリセット',
        crawlerDedupButton: '重複 URL を削除',
        crawlerStartUrl: '開始 URL',
        crawlerDepth: '深さ',
        crawlerPages: 'ページ',
        crawlerCollectBooks: '読書モード用にページ全体を保存',
        crawlerCollectMedex: 'Medesk の予約リンクを収集',
        voiceTrainingTitle: '音声トレーニング',
        voiceTrainingSummary: 'クリアな音声クリップを3つ以上アップロードして、アシスタントにプロジェクトの声を学習させましょう。',
        voiceUploadButton: 'クリップをアップロード',
        voiceRecordButton: '音声を録音',
        voiceRecordStopButton: '録音を停止',
        voiceSamplesEmpty: '音声クリップがまだありません。',
        voiceTrainButton: 'カスタム音声を学習',
        promptAiStart: '生成中…',
        promptAiReady: 'プロンプトの準備完了',
        promptAiStopped: '停止しました',
        promptAiError: 'エラー: {message}',
        promptAiInvalidDomain: '有効なドメインまたは URL を指定してください',
        promptAiEmpty: 'モデルが空の結果を返しました',
        genericFailed: '失敗',
        logoutProgress: 'ログアウト中…',
        logCopyEmpty: 'コピーするものがありません',
        logCopySuccess: 'ログをコピーしました',
        logCopyError: 'コピーに失敗しました',
        knowledgeServiceUnavailable: 'このアクセスレベルでは利用できません',
        knowledgeServiceLoading: '読み込み中…',
        knowledgeServiceNoData: 'データがありません',
        knowledgeServiceUpgrade: 'サービスを利用できません（バックエンドを更新してください）',
        knowledgeServiceFetchError: 'ステータスの取得に失敗しました',
        knowledgeServiceSaving: '保存中…',
        knowledgeServiceSaved: '保存しました',
        knowledgeServiceSaveError: '保存に失敗しました'
      }),
      ar: createLanguage('العربية', 'rtl', {
        pillOperations: 'العمليات',
        headerTitle: 'لوحة تحكم الزاحف',
        headerSubtitle: 'إدارة الزحف وقاعدة المعرفة والبنية التحتية من لوحة واحدة',
        buttonReorder: 'إعادة ترتيب البلوكات',
        buttonReorderDone: 'تم',
        buttonLogout: 'تسجيل الخروج',
        languageLabel: 'اللغة',
        overviewProjectTitle: 'المشروع',
        overviewProjectMeta: 'لا يوجد مشروع محدد',
        overviewCrawlerTitle: 'الزاحف',
        overviewResourcesTitle: 'الموارد',
        overviewLLMTitle: 'رؤى LLM',
        overviewLLMEmpty: 'ستظهر المطالبات الأخيرة هنا',
        overviewBuildTitle: 'البناء',
        cardProjectsTitle: 'المشاريع',
        buttonAddProject: 'إضافة مشروع',
        buttonRefreshProjects: 'تحديث القائمة',
        crawlerStatusTitle: 'حالة الزاحف',
        crawlerQueued: 'في الانتظار: {value}',
        crawlerInProgress: 'قيد التنفيذ: {value}',
        crawlerDone: 'مكتمل: {value}',
        crawlerFailed: 'فشل: {value}',
        crawlerLast: 'الأحدث: {value}',
        crawlerProjectLabel: 'المشروع: {value}',
        crawlerLastUrls: 'أحدث الروابط',
        servicesTitle: 'الخدمات',
        serviceMongo: 'Mongo: {value}',
        serviceRedis: 'Redis: {value}',
        serviceQdrant: 'Qdrant: {value}',
        serviceOverall: 'الحالة: {value}',
        resourcesTitle: 'الموارد',
        resourceCpuApp: 'CPU (تطبيق): {value}',
        resourceCpuSys: 'CPU (نظام): {value}',
        resourceRam: 'الذاكرة: {value}',
        resourceRss: 'RSS: {value}',
        resourceGpu: 'GPU: {value}',
        resourcePython: 'Python: {value}',
        manageSection: 'الإدارة',
        crawlerLaunchTitle: 'تشغيل الزاحف',
        crawlerLogsTooltip: 'عرض السجلات',
        crawlerLogsHeader: 'سجلات الزاحف',
        crawlerLogsCopy: 'نسخ',
        crawlerLogsRefresh: 'تحديث',
        crawlerLogsHide: 'إخفاء',
        crawlerLogsEmpty: 'سيتم تحميل السجلات عند الطلب.',
        crawlerSelectProject: 'اختر مشروعًا',
        crawlerLaunched: 'تم البدء',
        crawlerLaunchFailed: 'فشل البدء',
        crawlerStartError: 'خطأ في تشغيل الزاحف',
        crawlerStopping: 'يتم الإيقاف…',
        crawlerStopFailed: 'فشل الإيقاف',
        crawlerStopError: 'خطأ في إيقاف الزاحف',
        crawlerActionReset: 'تمت إعادة تعيين العدادات',
        crawlerActionDedup: 'تمت إزالة التكرارات',
        crawlerActionNoData: 'لا شيء للنسخ',
        crawlerActionProcessing: 'جارٍ التنفيذ…',
        crawlerActionExecuteError: 'فشل تنفيذ الإجراء',
        crawlerStartButton: 'ابدأ',
        crawlerStopButton: 'إيقاف',
        crawlerResetButton: 'إعادة تعيين العدادات',
        crawlerDedupButton: 'إزالة الروابط المكررة',
        crawlerStartUrl: 'رابط البداية',
        crawlerDepth: 'العمق',
        crawlerPages: 'الصفحات',
        crawlerCollectBooks: 'حفظ الصفحات كاملة لوضع القراءة',
        crawlerCollectMedex: 'جمع روابط حجز Medesk',
        voiceTrainingTitle: 'تدريب الصوت',
        voiceTrainingSummary: 'حمّل 3 مقاطع صوتية نظيفة على الأقل ليكتسب المساعد صوت مشروعك.',
        voiceUploadButton: 'رفع المقاطع',
        voiceRecordButton: 'تسجيل مقطع',
        voiceRecordStopButton: 'إيقاف التسجيل',
        voiceSamplesEmpty: 'لا توجد مقاطع صوتية بعد.',
        voiceTrainButton: 'تدريب الصوت المخصص',
        promptAiStart: 'جاري التوليد…',
        promptAiReady: 'المطالبة جاهزة',
        promptAiStopped: 'تم الإيقاف',
        promptAiError: 'خطأ: {message}',
        promptAiInvalidDomain: 'يرجى تحديد نطاق أو رابط صالح',
        promptAiEmpty: 'أعاد النموذج نتيجة فارغة',
        genericFailed: 'فشل',
        logoutProgress: 'جارٍ تسجيل الخروج…',
        logCopyEmpty: 'لا شيء للنسخ',
        logCopySuccess: 'تم نسخ السجلات',
        logCopyError: 'تعذر النسخ',
        knowledgeServiceUnavailable: 'الخدمة غير متاحة لمستوى وصولك',
        knowledgeServiceLoading: 'جارٍ التحميل…',
        knowledgeServiceNoData: 'لا توجد بيانات',
        knowledgeServiceUpgrade: 'الخدمة غير متاحة (يرجى تحديث الخلفية)',
        knowledgeServiceFetchError: 'تعذر جلب الحالة',
        knowledgeServiceSaving: 'جارٍ الحفظ…',
        knowledgeServiceSaved: 'تم الحفظ',
        knowledgeServiceSaveError: 'فشل الحفظ'
      })
    };

    const STATIC_CONFIG = global.ADMIN_I18N_STATIC || {};
    const STATIC_MATCH_MAP = new Map();

    const registerMatch = (key, raw) => {
      if (!key || !raw) return;
      const trimmed = String(raw).trim();
      if (!trimmed) return;
      if (!STATIC_MATCH_MAP.has(trimmed)) {
        STATIC_MATCH_MAP.set(trimmed, key);
      }
    };

    const mergeExtraStrings = (collection = {}, includeMatches = true) => {
      Object.entries(collection).forEach(([key, value = {}]) => {
        const { en, ru, match } = value;
        if (en) {
          BASE_STRINGS[key] = en;
          if (LANGUAGES.en) {
            LANGUAGES.en.strings[key] = en;
          }
          Object.entries(LANGUAGES).forEach(([code, lang]) => {
            if (code !== 'en' && lang && lang.strings && !Object.prototype.hasOwnProperty.call(lang.strings, key)) {
              lang.strings[key] = en;
            }
          });
        }
        if (ru && LANGUAGES.ru) {
          LANGUAGES.ru.strings[key] = ru;
        }
        if (includeMatches) {
          if (Array.isArray(match) && match.length) {
            match.forEach((entry) => registerMatch(key, entry));
          } else if (ru) {
            registerMatch(key, ru);
          } else if (en) {
            registerMatch(key, en);
          }
        }
      });
    };

    mergeExtraStrings(STATIC_CONFIG.text);
    mergeExtraStrings(STATIC_CONFIG.placeholders);
    mergeExtraStrings(STATIC_CONFIG.titles);
    mergeExtraStrings(STATIC_CONFIG.alt);


    let currentLanguage = (() => {
      try {
        const stored = localStorage.getItem(LANGUAGE_STORAGE_KEY);
        if (stored && LANGUAGES[stored]) {
          return stored;
        }
      } catch {}
      return FALLBACK_LANGUAGE;
    })();

    function t(key, params = {}) {
      if (!key) return '';
      const dict = LANGUAGES[currentLanguage]?.strings || LANGUAGES[FALLBACK_LANGUAGE].strings;
      const template = dict[key] ?? LANGUAGES[FALLBACK_LANGUAGE].strings[key] ?? key;
      return template.replace(/\{(\w+)\}/g, (_, token) => {
        if (token in params) {
          return String(params[token]);
        }
        return '';
      });
    }

    function applyLanguage(lang) {
      if (!LANGUAGES[lang]) lang = FALLBACK_LANGUAGE;
      currentLanguage = lang;
      try { localStorage.setItem(LANGUAGE_STORAGE_KEY, currentLanguage); } catch {}
      const cfg = LANGUAGES[currentLanguage];
      document.documentElement.lang = currentLanguage;
      document.documentElement.dir = cfg.dir || 'ltr';

      if (languageSelect) {
        languageSelect.innerHTML = '';
        Object.entries(LANGUAGES).forEach(([code, meta]) => {
          const option = document.createElement('option');
          option.value = code;
          option.textContent = meta.name;
          if (code === currentLanguage) option.selected = true;
          languageSelect.appendChild(option);
        });
      }

      document.querySelectorAll('[data-i18n]').forEach((node) => {
        const key = node.dataset.i18n;
        const translation = t(key);
        const hasElementChildren = Array.from(node.childNodes).some(
          (child) => child.nodeType === Node.ELEMENT_NODE,
        );
        if (!hasElementChildren) {
          node.textContent = translation;
          return;
        }
        const textNode = Array.from(node.childNodes).find(
          (child) => child.nodeType === Node.TEXT_NODE,
        );
        if (textNode) {
          textNode.textContent = translation;
        } else {
          node.insertBefore(global.document.createTextNode(translation), node.firstChild || null);
        }
      });

      document.querySelectorAll('[data-i18n-placeholder]').forEach((node) => {
        const key = node.dataset.i18nPlaceholder;
        node.setAttribute('placeholder', t(key));
      });

      document.querySelectorAll('[data-i18n-aria-label]').forEach((node) => {
        const key = node.dataset.i18nAriaLabel;
        node.setAttribute('aria-label', t(key));
      });

      document.querySelectorAll('[data-i18n-title]').forEach((node) => {
        const key = node.dataset.i18nTitle;
        node.setAttribute('title', t(key));
      });

      document.querySelectorAll('[data-i18n-alt]').forEach((node) => {
        const key = node.dataset.i18nAlt;
        node.setAttribute('alt', t(key));
      });

      document.querySelectorAll('[data-i18n-text]').forEach((node) => {
        const key = node.dataset.i18nText;
        const translation = t(key);
        const textNode = Array.from(node.childNodes).find((child) => child.nodeType === Node.TEXT_NODE);
        if (textNode) {
          textNode.textContent = translation;
        } else {
          node.insertBefore(global.document.createTextNode(translation), node.firstChild || null);
        }
      });

      document.querySelectorAll('[data-i18n-wrapper]').forEach((node) => {
        const key = node.dataset.i18nWrapper;
        const valueNode = node.querySelector('[data-i18n-value]');
        const valueText = valueNode ? valueNode.textContent : '';
        const placeholder = '__VALUE_PLACEHOLDER__';
        const html = t(key, { value: placeholder });
        const id = valueNode?.id;
        const className = valueNode?.className;
        node.innerHTML = html.replace(placeholder, `<span data-i18n-value>${valueText}</span>`);
        const newValueNode = node.querySelector('[data-i18n-value]');
        if (newValueNode) {
          if (id) newValueNode.id = id;
          if (className) newValueNode.className = className;
        }
      });

      if (authHint) {
        const host = authHint.dataset.host || global.location.origin;
        authHint.textContent = t('authHint').replace('{host}', host);
      }
      if (authMessage) {
        authMessage.textContent = t('authPrompt');
      }
      if (authError?.dataset.key) {
        authError.textContent = t(authError.dataset.key);
      }

      try {
        onLanguageApplied({ currentLanguage, t });
      } catch (error) {
        console.warn('admin_language_callback_failed', error);
      }
    }

    if (languageSelect) {
      languageSelect.addEventListener('change', (event) => {
        applyLanguage(event.target.value);
      });
    }

    global.t = t;
    global.tl = (phrase, params = {}) => {
      if (typeof phrase !== 'string') return '';
      const trimmed = phrase.trim();
      const key = STATIC_MATCH_MAP.get(trimmed);
      if (key) {
        return t(key, params);
      }
      if (Object.keys(params || {}).length) {
        return trimmed.replace(/\{(\w+)\}/g, (_, token) => {
          if (token in params) return String(params[token]);
          return '';
        });
      }
      return trimmed;
    };

    return {
      t,
      applyLanguage,
      getCurrentLanguage: () => currentLanguage,
      LANGUAGES,
      FALLBACK_LANGUAGE,
      LANGUAGE_STORAGE_KEY,
    };
  }

  global.initAdminI18n = initAdminI18n;
})(window);
