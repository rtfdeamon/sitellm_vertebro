FROM python:3.10-slim

WORKDIR /app

# Копируем зависимости
COPY pyproject.toml ./

 # Устанавливаем необходимые системные библиотеки, компиляторы и Python-зависимости
 RUN --mount=type=cache,target=/var/cache/apt,sharing=locked,id=apt-cache \
     --mount=type=cache,target=/root/.cache/uv,sharing=locked,id=uv-cache \
    bash -euxo pipefail -c '\
      export DEBIAN_FRONTEND=noninteractive; \
      mkdir -p /var/cache/apt/archives/partial; \
      rm -f /var/lib/apt/lists/lock /var/cache/apt/archives/lock /var/cache/apt/archives/partial/lock; \
      for i in 1 2 3 4 5; do \
        apt-get -o Acquire::Retries=5 update && \
        apt-get -y -o Dpkg::Use-Pty=0 --no-install-recommends install \
          build-essential git cmake ninja-build pkg-config curl libopenblas-dev python3-dev && break || sleep 3; \
      done; \
      pip install --no-cache-dir -i https://pypi.org/simple "uv>=0.8"; \
      uv pip install --system --no-cache --requirements pyproject.toml; \
      apt-get purge -y --auto-remove git cmake build-essential python3-dev ninja-build; \
      apt-get clean; rm -rf /var/lib/apt/lists/* \
    '

# Задаём переменные окружения для pip и CMake
ENV PIP_INDEX_URL=https://download.pytorch.org/whl/cpu/simple \
    PIP_EXTRA_INDEX_URL=https://abetlen.github.io/llama-cpp-python/whl/cpu \
    FORCE_CMAKE=1 \
    CMAKE_ARGS="-DLLAMA_ARM_DOTPROD=OFF -DLLAMA_ARM_FMA=OFF -DLLAMA_ARM_FP16=OFF" \
    PYTHONPATH=/app

# Копируем код бота
COPY safety ./safety
COPY observability ./observability
COPY tg_bot ./tg_bot

# Запускаем
CMD ["python", "-m", "tg_bot.run"]
