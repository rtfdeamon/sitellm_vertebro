# Docker Compose stack to run the API, Redis and Mongo locally
services:
  mongo:
    # MongoDB stores conversation history and documents
    image: mongo:latest
    restart: unless-stopped
    ports:
      - "27017:27017"
    volumes:
      - "mongo_data:/data/db"
    env_file: .env
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_USERNAME:?Should be set}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_PASSWORD:?Should be set}
      MONGO_INITDB_DATABASE: ${MONGO_DATABASE:-smarthelperdb}

  redis:
    # Redis is used for the vector store and Celery broker
    image: redis/redis-stack-server
    restart: unless-stopped
    ports:
      - "6379:6379"

  celery_worker:
    # Processes scheduled tasks that update the vector store
    build:
      context: ./
      dockerfile: Dockerfile
    restart: unless-stopped
    env_file: .env
    command: ["uv", "run", "celery", "-A", "worker", "worker", "--loglevel=INFO"]
    depends_on:
      - redis
      - celery_beat

  celery_beat:
    # Scheduler for periodic vector store updates
    build:
      context: ./
      dockerfile: Dockerfile
    restart: unless-stopped
    env_file: .env
    command: ["uv", "run", "celery", "-A", "worker", "beat", "--loglevel=INFO"]
    depends_on:
      - redis

  app:
    # FastAPI application exposing the LLM endpoints
    build:
      context: ./
      dockerfile: Dockerfile
    restart: unless-stopped
    env_file: .env
    ports:
      - "8000:8000"
    depends_on:
      - redis
      - mongo

volumes:
  mongo_data:
